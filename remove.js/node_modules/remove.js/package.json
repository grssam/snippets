{
  "name": "remove.js",
  "version": "0.1.0",
  "description": "Small but powerful string cleanup and reduction library",
  "main": "remove.js",
  "homepage": "https://github.com/scrapmac/snippets/tree/master/remove.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/scrapmac/snippets.git"
  },
  "bugs": {
    "url": "https://github.com/scrapmac/snippets/issues"
  },
  "keywords": [
    "string",
    "remove",
    "cleanup",
    "reduction"
  ],
  "author": {
    "name": "Girish Sharma",
    "url": "http://grssam.com"
  },
  "license": "MPl",
  "readmeFilename": "README.md",
  "readme": "# remove.js\n\n*Small but powerful string cleanup and reduction library*\n\n## Try it\n\nIt contains the following string manipulation methods:\n\n- `remove.redundant` - To remove redundant words from a sentence\n- `remove.gibberish` - To remove gibberish parts (or completely replace) from a sentence\n- `remove.characters` - To intelligentally trim the sentence\n\nThe `remove.js` file contains the whole library.\n\n## Install it\n\n### Node\n\nYou can try to require it in node.\n```javascript\nvar remove = require('remove');\nvar string = \"bmgbberish This is This is a chkgbbr nice day day\";\nstring = remove.gibberish(string) // returns \"This is This is a nice day day\"\nstring = remove.redundant(string) // returns \"This is a nice day\"\nstring = remove.characters(string, 10) // returns \"This … day\"\n```\n### Browser\n\nTo use it in browser, simply include the file `remove.js` in your html\n```html\n<script src=\"remove.js\"></script>\n```\n... and use it like\n```javascript\nvar string = \"bmgbberish This is This is a chkgbbr nice day day\";\nstring = remove.gibberish(string) // returns \"This is This is a nice day day\"\n// and so on.\n```\n### jQuery\n\n`remove.js` also works with jQuery. If jQuery is found on the page where you have included the file, then it registers the following custom methods:\n\n- `removeRedundant()` (and its short version `rR()`)\n- `removeGibberish()` (and its short version `rG()`)\n- `removeCharacters()` (and its short version `rC()`)\n\nAll of the methods are chainable (like any other jquery method)\n\nHere's how to convert the above mentioned example into jQuery syntax:\n\n```javascript\nvar strings = $([\"bmgbberish This is This is a chkgbbr nice day day\"]);\nstrings = strings.removeRedundant().removeGibberish().removeCharacters(10);\n// too much typing ? try this:\nstrings = strings.rR().rG().rC(10)[0]; // returns \"This … day\"\n```\n## State of the project\n\nThe `remove.js` file is around 14 KB, but the minified is only 3.75 KB and the gzipped minified is even smaller (1.64 KB).\n\nAll the methods are documented inline and a nice docco view can be found [here](http://scrapmac.github.io/snippets/remove.js/docs/remove.html)\n\nCertain Limitations:\n\n- The redundant detection logic is not that great. It can be improved a lot.\n- The same goes for gibberish detection logic. But in this case, improving it further is really challenging.\n\n*Hacked by Girish Sharma. Taken from [Location Bar Enhancer](https://github.com/scrapmac/UIEnhancer) and further enhanced*.\n\nThis work is licensed under the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, you can obtain one at http://mozilla.org/MPL/2.0/.\n",
  "_id": "remove.js@0.1.0",
  "_from": "remove.js@"
}
